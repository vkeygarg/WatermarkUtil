apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories { mavenCentral() }

dependencies {
    compile group: 'log4j', name: 'log4j', version: '1.2.17'
	compile group: 'commons-io', name: 'commons-io', version: '2.5'
	compile group: 'commons-lang', name: 'commons-lang', version: '2.5'
	compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.21'

    compile fileTree(dir: 'libs', include: ['*.jar'])
}

task wrapper(type: Wrapper) {
    gradleVersion = "3.0"
}


startScripts {
	//classpath += files('lib/gsdk_key.txt')
	//classpath += files('lib/gsdk_sn.txt')
    doLast {
		//unixScript.text = unixScript.text.replace('#!/usr/bin/env bash', '#!/usr/bin/env bash\nosStr=$(uname -s)\nhwStr=$(uname -m)\nif  [ "$osStr" !=  "Linux" ] && [ "$hwStr" !=  "x86_64" ];\n     then\n     echo "IMP is only supported for the Linux x86_64 platform."\n     echo "$osStr $hwStr is not supported."\n     exit 1\nfi\nif  domainname | grep unixrnd > /dev/null\nthen\n    export JAVA_HOME=/tools/oss/packages/x86_64-rhel6/java/jdk1.8.0_192\n    export SITE_VAR=AVAGO\nelse\n    export JAVA_HOME=/tools/oss/packages/x86_64-rhel6/java/jdk1.8.0_192\n    export SITE_VAR=BRCM\nfi\nexport PATH=$JAVA_HOME/bin:$PATH\n')
	}
}


def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd.HHmm')
    return formattedDate
}

jar.doFirst{
	def version = getDate()
     manifest {
            attributes(
                "Manifest-Version" : "$version",
                "Main-Class" : "com.x.wm.pdf.WaterMarkUtil"
             )
      }
}

def libsDir = file("libs")
mainClassName = 'com.x.wm.pdf.WaterMarkUtil'
applicationDefaultJvmArgs = ["-Xmx512m", "-Xms512m", "-Djava.library.path=${libsDir}", "-Dwaterwmutil.key.path=${libsDir}"]
startScripts { applicationName = "wmutil" }

distributions {
    main {
        contents {
            from('libs/') {
                into 'lib'
            }
        }
    }
}
